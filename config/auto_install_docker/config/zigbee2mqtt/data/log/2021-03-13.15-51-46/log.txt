info  2021-03-13 15:51:48: Logging to console and directory: '/home/zigbee2mqtt/data/log/2021-03-13.15-51-46' filename: log.txt
info  2021-03-13 15:51:49: Starting Zigbee2MQTT version 1.17.1 (commit #99274c7)
info  2021-03-13 15:51:49: Starting zigbee-herdsman (0.13.59)
info  2021-03-13 15:51:51: zigbee-herdsman started
info  2021-03-13 15:51:51: Coordinator firmware version: '{"meta":{"maintrel":3,"majorrel":2,"minorrel":6,"product":0,"revision":20190608,"transportrev":2},"type":"zStack12"}'
info  2021-03-13 15:51:51: Currently 0 devices are joined:
warn  2021-03-13 15:51:51: `permit_join` set to  `true` in configuration.yaml.
warn  2021-03-13 15:51:51: Allowing new devices to join.
warn  2021-03-13 15:51:51: Set `permit_join` to `false` once you joined all devices.
info  2021-03-13 15:51:51: Zigbee: allowing new devices to join.
info  2021-03-13 15:51:51: Connecting to MQTT server at mqtt://localhost:12183
info  2021-03-13 15:51:51: Connected to MQTT server
info  2021-03-13 15:51:51: MQTT publish: topic 'zigbee2mqtt/bridge/state', payload 'online'
info  2021-03-13 15:51:51: MQTT publish: topic 'zigbee2mqtt/bridge/info', payload '{"commit":"99274c7","config":{"advanced":{"adapter_concurrent":null,"adapter_delay":null,"availability_blacklist":[],"availability_blocklist":[],"availability_passlist":[],"availability_timeout":0,"availability_whitelist":[],"cache_state":true,"cache_state_persistent":true,"cache_state_send_on_startup":true,"channel":11,"elapsed":false,"ext_pan_id":[221,221,221,221,221,221,221,221],"homeassistant_discovery_topic":"homeassistant","homeassistant_legacy_triggers":true,"homeassistant_status_topic":"hass/status","last_seen":"disable","legacy_api":true,"log_directory":"/home/zigbee2mqtt/data/log/%TIMESTAMP%","log_file":"log.txt","log_level":"info","log_output":["console","file"],"log_rotation":true,"log_syslog":{},"pan_id":6754,"report":false,"soft_reset_timeout":0,"timestamp_format":"YYYY-MM-DD HH:mm:ss"},"ban":[],"blocklist":[],"device_options":{},"devices":{},"experimental":{"output":"json"},"external_converters":[],"groups":{},"homeassistant":false,"map_options":{"graphviz":{"colors":{"fill":{"coordinator":"#e04e5d","enddevice":"#fff8ce","router":"#4ea3e0"},"font":{"coordinator":"#ffffff","enddevice":"#000000","router":"#ffffff"},"line":{"active":"#009900","inactive":"#994444"}}}},"mqtt":{"base_topic":"zigbee2mqtt","force_disable_retain":false,"include_device_information":false,"server":"mqtt://localhost:12183"},"passlist":[],"permit_join":true,"serial":{"disable_led":false,"port":"/dev/ttyACM0"},"whitelist":[]},"config_schema":{"definitions":{"device":{"properties":{"debounce":{"description":"Debounces messages of this device","title":"Debounce","type":"number"},"debounce_ignore":{"description":"Protects unique payload values of specified payload properties from overriding within debounce time","examples":["action"],"items":{"type":"string"},"title":"Ignore debounce","type":"array"},"filtered_attributes":{"description":"Allows to prevent certain attributes from being published","examples":["temperature","battery","action"],"items":{"type":"string"},"title":"Filtered attributes","type":"array"},"friendly_name":{"description":"Used in the MQTT topic of a device. By default this is the device ID","readOnly":true,"title":"Friendly name","type":"string"},"optimistic":{"description":"Publish optimistic state after set (default true)","title":"Optimistic","type":"boolean"},"qos":{"descritption":"QoS level for MQTT messages of this device","title":"QoS","type":"number"},"retain":{"description":"Retain MQTT messages of this device","title":"Retain","type":"boolean"},"retention":{"description":"Sets the MQTT Message Expiry in seconds, Make sure to set mqtt.version to 5","title":"Retention","type":"number"},"retrieve_state":{"description":"Retrieves the state after setting it (Should only be enabled when the reporting feature does not work for this device)","title":"Retrieve State","type":"boolean"}},"required":["friendly_name"],"type":"object"},"group":{"properties":{"devices":{"items":{"type":"string"},"type":"array"},"filtered_attributes":{"items":{"type":"string"},"type":"array"},"friendly_name":{"type":"string"},"optimistic":{"type":"boolean"},"qos":{"type":"number"},"retain":{"type":"boolean"}},"required":["friendly_name"],"type":"object"}},"properties":{"advanced":{"properties":{"adapter_concurrent":{"description":"Adapter concurrency (e.g. 2 for CC2531 or 16 for CC26X2R1) (default: null, uses recommended value)","title":"Adapter concurrency","type":["number","null"]},"adapter_delay":{"title":"Adapter delay","type":["number","null"]},"availability_blacklist":{"items":{"type":"string"},"title":"Availability blacklist (deprecated)","type":"array"},"availability_blocklist":{"description":"Prevent devices from being checked for availability","items":{"type":"string"},"title":"Availability Blocklist","type":"array"},"availability_passlist":{"description":"Only enable availability check for certain devices","items":{"type":"string"},"title":"Availability passlist","type":"array"},"availability_timeout":{"default":0,"description":"Availability timeout in seconds When enabled, devices will be checked if they are still online. Only AC powered routers are checked for availability","minimum":0,"title":"Availability Timeout","type":"number"},"availability_whitelist":{"items":{"type":"string"},"title":"Availability whitelist (deprecated)","type":"array"},"baudrate":{"description":"Baudrate for serial port, default: 115200 for Z-Stack, 38400 for Deconz","examples":[38400,115200],"title":"Baudrate","type":"number"},"cache_state":{"default":true,"description":"MQTT message payload will contain all attributes, not only changed ones. Has to be true when integrating via Home Assistant","title":"Cache state","type":"boolean"},"cache_state_persistent":{"default":true,"description":"Persist cached state, only used when Cache state(cache_state: true)","title":"Chache state persistent","type":"boolean"},"cache_state_send_on_startup":{"default":true,"description":"Cache state send on startup, only used when Cache state(cache_state: true)","title":"Cache state send on startup","type":"boolean"},"channel":{"default":11,"description":"Changing requires re-pairing of all devices. (Note: use a ZLL channel: 11, 15, 20, or 25 to avoid Problems)","maximum":26,"minimum":11,"title":"ZigBee channel","type":"number"},"elapsed":{"default":false,"description":"Add an elapsed attribute to MQTT messages, contains milliseconds since the previous msg","title":"Elapsed","type":"boolean"},"ext_pan_id":{"description":"Zigbee extended pan ID","items":{"type":"number"},"title":"Ext Pan ID","type":"array"},"homeassistant_discovery_topic":{"examples":["homeassistant"],"title":"Homeassistant discovery topic","type":"string"},"homeassistant_status_topic":{"examples":["homeassistant/status"],"title":"Home Assistant status topic","type":"string"},"last_seen":{"default":"disable","description":"Add a last_seen attribute to MQTT messages, contains date/time of last Zigbee message","enum":["disable","ISO_8601","ISO_8601_local","epoch"],"title":"Last seen","type":"string"},"legacy_api":{"default":true,"description":"Disables the legacy api (false = disable)","title":"Legacy API","type":"boolean"},"log_directory":{"description":"Location of log directory","examples":["data/log/%TIMESTAMP%"],"title":"Log directory","type":"string"},"log_file":{"default":"log.txt","description":"Log file name, can also contain timestamp","examples":["zigbee2mqtt_%TIMESTAMP%.log"],"title":"Log file","type":"string"},"log_level":{"default":"info","description":"Logging level","enum":["info","warn","error","debug"],"title":"Log level","type":"string"},"log_output":{"description":"Output location of the log, leave empty to supress logging","items":{"enum":["console","file","syslog"],"type":"string"},"title":"Log output","type":"array"},"log_rotation":{"default":true,"description":"Log rotation","title":"Log rotation","type":"boolean"},"network_key":{"description":"Network encryption key, will improve security (Note: changing requires repairing of all devices)","oneOf":[{"title":"Network key(string)","type":"string"},{"items":{"type":"number"},"title":"Network key(array)","type":"array"}],"title":"Network key"},"pan_id":{"description":"ZigBee pan ID","oneOf":[{"title":"Pan ID (string)","type":"string"},{"title":"Pan ID (number)","type":"number"}],"title":"Pan ID"},"report":{"description":"Enables report feature","title":"Reporting","type":"boolean"},"rtscts":{"default":false,"description":"RTS / CTS Hardware Flow Control for serial port","title":"RTS / CTS","type":"boolean"},"soft_reset_timeout":{"description":"Soft reset ZNP after timeout","minimum":0,"readOnly":true,"title":"Soft reset timeout (deprecated)","type":"number"},"timestamp_format":{"description":"Log timestamp format","examples":["YYYY-MM-DD HH:mm:ss"],"title":"Timestamp format","type":"string"}},"title":"Advanced settings","type":"object"},"ban":{"items":{"type":"string"},"title":"Ban (deprecated)","type":"array"},"blocklist":{"description":"Block devices from the network (by ieeeAddr)","items":{"type":"string"},"title":"Blocklist","type":"array"},"device_options":{"type":"object"},"devices":{"patternProperties":{"^.*$":{"$ref":"#/definitions/device"}},"propertyNames":{"pattern":"^0x[\\d\\w]{16}$"},"type":"object"},"experimental":{"properties":{"output":{"description":"Examples when 'state' of a device is published json: topic: 'zigbee2mqtt/my_bulb' payload '{\"state\": \"ON\"}' attribute: topic 'zigbee2mqtt/my_bulb/state' payload 'ON' attribute_and_json: both json and attribute (see above)","enum":["attribute_and_json","attribute","json"],"title":"MQTT output type","type":"string"},"transmit_power":{"title":"Transmit power","type":["number","null"]}},"title":"Experimental options","type":"object"},"external_converters":{"examples":["DIYRuZ_FreePad.js"],"items":{"type":"string"},"title":"External converters","type":"array"},"groups":{"patternProperties":{"^.*$":{"$ref":"#/definitions/group"}},"propertyNames":{"pattern":"^[\\w].*$"},"type":"object"},"homeassistant":{"default":false,"description":"Home Assistant integration (MQTT discovery)","title":"Homeassistant integration","type":"boolean"},"map_options":{"properties":{"graphviz":{"properties":{"colors":{"properties":{"fill":{"properties":{"coordinator":{"type":"string"},"enddevice":{"type":"string"},"router":{"type":"string"}},"type":"object"},"font":{"properties":{"coordinator":{"type":"string"},"enddevice":{"type":"string"},"router":{"type":"string"}},"type":"object"},"line":{"properties":{"active":{"type":"string"},"inactive":{"type":"string"}},"type":"object"}},"type":"object"}},"type":"object"}},"title":"Networkmap options","type":"object"},"mqtt":{"properties":{"base_topic":{"description":"MQTT base topic for Zigbee2MQTT MQTT messages","examples":["zigbee2mqtt"],"title":"Base topic","type":"string"},"ca":{"description":"Absolute path to SSL/TLS certificate of CA used to sign server and client certificates","examples":["/etc/ssl/mqtt-ca.crt"],"title":"Certificate authority","type":"string"},"cert":{"examples":["/etc/ssl/mqtt-client.crt"],"title":"SSL/TLS certificate","type":"string"},"client_id":{"description":"MQTT client ID","examples":["MY_CLIENT_ID"],"title":"Client ID","type":"string"},"force_disable_retain":{"default":false,"description":"Disable retain for all send messages. ONLY enable if you MQTT broker doesn't support retained message (e.g. AWS IoT core, Azure IoT Hub, Google Cloud IoT core, IBM Watson IoT Platform). Enabling will break the Home Assistant integration","title":"Force disable retain","type":"boolean"},"include_device_information":{"default":false,"description":"Include device information to mqtt messages","title":"Include device information","type":"boolean"},"keepalive":{"default":60,"description":"MQTT keepalive in second","title":"Keepalive","type":"number"},"key":{"description":"Absolute paths to SSL/TLS key and certificate for client-authentication","examples":["/etc/ssl/mqtt-client.key"],"title":"SSL/TLS key","type":"string"},"password":{"description":"MQTT server authentication password","examples":["ILOVEPELMENI"],"title":"Password","type":"string"},"reject_unauthorized":{"default":true,"description":"Disable self-signed SSL certificate","title":"Reject unauthorized","type":"boolean"},"server":{"description":"MQTT server URL (use mqtts:// for SSL/TLS connection)","examples":["mqtt://localhost:1883"],"title":"MQTT server","type":"string"},"user":{"description":"MQTT server authentication user","examples":["johnnysilverhand"],"title":"User","type":"string"},"version":{"default":4,"description":"MQTT protocol version","title":"Version","type":["number","null"]}},"required":["base_topic","server"],"title":"MQTT settings","type":"object"},"passlist":{"description":"Allow only certain devices to join the network (by ieeeAddr). Note that all devices not on the passlist will be removed from the network!","items":{"type":"string"},"title":"Passlist","type":"array"},"permit_join":{"default":false,"description":"Allow new devices to join. WARNING: Disable this after all devices have been paired!","title":"Permit join","type":"boolean"},"serial":{"properties":{"adapter":{"description":"Adapter type, not needed unless you are experiencing problems","enum":["deconz","zstack","zigate"],"title":"Adapter","type":"string"},"disable_led":{"default":false,"description":"Disable LED of the adapter if supported","title":"Disable led","type":"boolean"},"port":{"description":"Location of the adapter. To autodetect the port, set null","examples":["/dev/ttyACM0"],"title":"Port","type":["string","null"]}},"title":"Serial settings","type":"object"},"whitelist":{"items":{"type":"string"},"title":"Whitelist (deprecated)","type":"array"}},"required":["mqtt"],"type":"object"},"coordinator":{"meta":{"maintrel":3,"majorrel":2,"minorrel":6,"product":0,"revision":20190608,"transportrev":2},"type":"zStack12"},"log_level":"info","network":{"channel":11,"extended_pan_id":"0xdddddddddddddddd","pan_id":6754},"permit_join":true,"version":"1.17.1"}'
info  2021-03-13 15:51:51: MQTT publish: topic 'zigbee2mqtt/bridge/devices', payload '[{"definition":null,"endpoints":{"1":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]},"10":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]},"11":{"bindings":[],"clusters":{"input":["ssIasAce"],"output":["ssIasZone","ssIasWd"]},"configured_reportings":[]},"110":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]},"12":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]},"13":{"bindings":[],"clusters":{"input":["genOta"],"output":[]},"configured_reportings":[]},"2":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]},"242":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]},"3":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]},"4":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]},"47":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]},"5":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]},"6":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]},"8":{"bindings":[],"clusters":{"input":[],"output":[]},"configured_reportings":[]}},"friendly_name":"Coordinator","ieee_address":"0x00124b0014d9459c","interview_completed":true,"interviewing":false,"network_address":0,"supported":false,"type":"Coordinator"}]'
info  2021-03-13 15:51:51: MQTT publish: topic 'zigbee2mqtt/bridge/groups', payload '[]'
info  2021-03-13 15:51:52: MQTT publish: topic 'zigbee2mqtt/bridge/config', payload '{"commit":"99274c7","coordinator":{"meta":{"maintrel":3,"majorrel":2,"minorrel":6,"product":0,"revision":20190608,"transportrev":2},"type":"zStack12"},"log_level":"info","network":{"channel":11,"extendedPanID":"0xdddddddddddddddd","panID":6754},"permit_join":true,"version":"1.17.1"}'
info  2021-03-13 15:52:25: MQTT publish: topic 'zigbee2mqtt/bridge/log', payload '{"message":{"friendly_name":"0x00158d000520ac5e"},"type":"entity_not_found"}'
error 2021-03-13 15:52:25: Entity '0x00158d000520ac5e' is unknown
info  2021-03-13 15:53:43: MQTT publish: topic 'zigbee2mqtt/bridge/log', payload '{"message":{"friendly_name":"0x00158d000520ac5e"},"type":"entity_not_found"}'
error 2021-03-13 15:53:43: Entity '0x00158d000520ac5e' is unknown
info  2021-03-13 15:53:57: MQTT publish: topic 'zigbee2mqtt/bridge/log', payload '{"message":{"friendly_name":"0x00158d000520ac5e"},"type":"entity_not_found"}'
error 2021-03-13 15:53:57: Entity '0x00158d000520ac5e' is unknown
info  2021-03-13 15:54:18: MQTT publish: topic 'zigbee2mqtt/bridge/log', payload '{"message":{"friendly_name":"0x00158d000520ac5e"},"type":"entity_not_found"}'
error 2021-03-13 15:54:18: Entity '0x00158d000520ac5e' is unknown
